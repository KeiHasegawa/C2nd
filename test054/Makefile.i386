TESTS = $(wildcard *.data)
LOFS = $(TESTS:.data=.lof)

CC = gcc
DIFF = diff
DOS2UNIX = dos2unix.csh
TOUCH = touch
DOGV = wdog.exe -v

SRCS = getch.c getop.c main.c stack.c
GENS = $(SRCS:.c=.o)

all:ok.log

calc.exe:$(OBJS)
	$(DOGV) gcc -o $@ $(GENS)

%.o : %.c
	$(DOGV) $(CC) -o $@ $< -c

%.log:%.data
	$(DOGV) ./calc.exe < $< > $@
	$(DOGV) $(DOS2UNIX) $@

%.lof:%.log
	$(DOGV) $(DIFF) $< $@
	$(TOUCH) $@

ok.log:$(LOFS)
	ls $(LOFS) > $@
	$(DOS2UNIX) $@
	$(TOUCH) $@

clean:
	$(RM) *.i *.s *.asm *.exe *.log a.c *.o *~
	$(RM) -r .vs x64 Debug Release

calc.exe:getch.o getop.o main.o stack.o

getch.o:getch.c
getop.o:getop.c
main.o:main.c
stack.o:stack.c

test000.lof:test000.log
test000.log:calc.exe
test001.lof:test001.log
test001.log:calc.exe
test002.lof:test002.log
test002.log:calc.exe
test003.lof:test003.log
test003.log:calc.exe
test004.lof:test004.log
test004.log:calc.exe
test005.lof:test005.log
test005.log:calc.exe
test006.lof:test006.log
test006.log:calc.exe
